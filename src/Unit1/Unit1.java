package Unit1;

/*
Q1:
JAVA 语言有哪些特点？

A1:
1.跨平台性
JAVA程序跨平台过程
JAVA编译器 -->> 字节码文件 -->> JAVA虚拟机翻译成对应机器指令文件  -->> 在不同平台运行
2.面向对象
程序由对象组成，程序的功能由对象间的信息传递与功能实现
3.简单性
提供丰富类库和API文档，第三方开发工具包以及开源项目
4.安全性
由字节码校验器校验后才能运行
5.多线程
一个任务分解成多个子任务
每个子任务用一个线程完成

Q2:
为什么说JAVA是结构中立的，而且具有跨平台特性？

A2：
A1(1)解释

Q3：简述JAVA的三种主要平台，它们适合开发哪种应用？

A3：
Java SE (Standard Edition) 创一个不依赖于特定操作系统的跨平台桌面应用
Java EE (Enterprise Edition) 构建大规模的企业级应用和服务
Java ME (Micro Edition) 开发小型设备上的应用

Q4:简述JDK . JRE . JVM 三者之间的关系

A4：
JDK : Java的运行环境和Java工具
JRE ：包含java虚拟机JVM以及Java的核心类库
JVM ： Java虚拟机

Q5:在Internet上搜索Java学习方法的介绍，给出JavaAPI文档的使用过程

A5：
学习路线：https://cloud.tencent.com/developer/article/2039264
使用过程：（由通义千问生成）
1.访问API文档：
打开浏览器。
在搜索引擎（如百度、Google等）的搜索框中输入“Java API”或更具体地“Java SE [版本号] API”，然后进行搜索。
选择官方提供的API文档链接，通常是来自Oracle官方网站。
2.浏览文档结构：
进入Java API文档主页后，你会看到一个分层次的文档结构，通常分为包(Packages)、类(Classes)、接口(Interfaces)等。
主页左上方一般会有一个包列表，你可以根据需要查找的类或接口所在的包进行点击。
3.查找特定信息：
如果你知道具体的包名，可以直接在左侧的包列表中找到对应的包并点击进入。
对于不确定确切位置的信息，可以使用页面顶部的搜索功能来快速定位到相关的类或方法。
左侧还会列出该包下的所有类和接口，点击感兴趣的项可以查看其详情。
4.阅读类或接口的详情：
点击具体的类或接口后，右侧将显示该类或接口的详尽信息，包括继承关系、实现接口、构造函数、属性以及成员方法等。
每个方法都有详细的参数说明、返回值类型、异常抛出情况及可能的使用示例。
5.参考示例代码：
大多数情况下，API文档会提供简单的代码片段作为使用示例，帮助理解如何正确调用这些API。
6.下载离线文档（可选）：
如果希望在没有网络连接的情况下也能查阅API文档，可以选择下载离线版本。可以从Oracle官网或其他可靠来源下载适用于您所使用的Java版本的API文档。
7.持续更新知识：
Java语言及其标准库不断更新，因此建议定期检查最新的API文档以获取最新特性和支持。

Q6：在项目中创建包的作用是什么

A6:
组织清晰可见
命令空间管理
控制可见性
促进模块化开发
简化导入语句

 */
public class Unit1 {
    public static void main(String[] arges){
        System.out.println("Unit 1");
    }
}
